By default, getopt() permutes the contents of argv as it scans,
so that eventually all the nonoptions are at the end.  Two other
scanning modes are also implemented.  If the first character of
optstring is '+' or the environment variable POSIXLY_CORRECT is
set, then option processing stops as soon as a nonoption argument
is encountered.  If '+' is not the first character of optstring,
it is treated as a normal option.  If POSIXLY_CORRECT behaviour
is required in this case optstring will contain two '+' symbols.
If the first character of optstring is '-', then each nonoption
argv-element is handled as if it were the argument of an option
with character code 1.  (This is used by programs that were
written to expect options and other argv-elements in any order
and that care about the ordering of the two.)  The special
argument "--" forces an end of option-scanning regardless of the
scanning mode


When the parent process closes or crashes for some reason, it also kills the child process.
Zero: if it is the child process (the process created).
Positive value: if it is the parent process.
Negative value: if an error occurred.


Come detto, tale segnale viene inviato al proprio padre da ogni processo 
quando termina, in modo che il processo padre possa effettuare chiamare la syscall wait() per togliere il figlio dallo stato di zombie.
 Sappiamo come alla morte del padre ogni processo figlio venga ereditato dal processo di sistema init; tale processo sfrutta proprio l'handler 
 di SIGCHLD per effettuare la wait() sui processi rimasti``orfani''.

Il comportamento di default per SIGCLD e SIGCHLD è di ignorare i segnali, 
cosicché un processo non venga interrotto dalla morte di un figlio; se il processo vuole evitare di creare zombie, 
deve espressamente definire un handler per uno di tali segnali nol quale viene chiamata la syscall wait(). System V implementa inoltre un particolare comportamento per SIGCLD, prevedendo che se un processo dichiara esplicitamente di voler
ignorare tale segnale, i figli di tale processo non diverranno zombie (è chiaro che il processo non potrà però più chiamare la syscall wait()).
 In pratica, una riga del tipo

signal(SIGCLD, SIG_IGN);

previene la creazione di zombie.